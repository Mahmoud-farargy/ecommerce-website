{"version":3,"sources":["routes/Views/Contact/Contact.js","components/SectionHeader/SectionHeader.js"],"names":["connect","dispatch","changeCurrentPage","title","type","useEffect","useState","message","email","name","subject","formInputs","setFormInput","isFormSubmitted","setFormSubmission","onInputChange","e","val","target","value","undefined","id","className","onSubmit","preventDefault","Object","values","every","toastify","msg","inputsCopy","JSON","parse","stringify","keys","map","key","onFormSubmission","required","onChange","cols","rows","placeholder","state","currentPageTitle","main","currentPage","props","sectionTitle","to"],"mappings":"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","file":"static/js/9.d540b068.chunk.js","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport SectionHeader from \"../../../components/SectionHeader/SectionHeader\";\nimport { BsTablet, BsEnvelope } from \"react-icons/bs\";\nimport { VscHome } from \"react-icons/vsc\";\nimport { toastify } from \"../../../utilities/utilities\";\nimport { connect } from \"react-redux\";\n// import Map from \"./Map/Map\";\nimport \"./Contact.scss\";\n\nconst Contact = ({changeCurrentPage}) => {\n    useEffect(() => {\n        changeCurrentPage(\"Contact\");\n    },[changeCurrentPage]);\n    const [formInputs, setFormInput] = useState({\n        message: \"\",\n        email: \"\",\n        name: \"\",\n        subject: \"\",\n    });\n    const [isFormSubmitted, setFormSubmission] = useState(false);\n    const onInputChange = (e) => {\n        const val = e.target.value;\n        const name = e.target.name;\n        (typeof val !== undefined && name) && setFormInput({\n            ...formInputs,\n            [name]: val\n        });\n    }\n\n    const onFormSubmission = (e) => {\n        e.preventDefault();\n        setFormSubmission(true);\n        if(Object.values(formInputs).every(val => (val !== \"\" && val !== undefined ) )){\n            toastify({msg:\"Your messasge has been sent. Thanks!\", type: \"success\"});\n            const inputsCopy = JSON.parse(JSON.stringify(formInputs));\n            Object.keys(inputsCopy).map(key =>  inputsCopy[key] = '');\n            setFormInput(inputsCopy);\n            setFormSubmission(false);\n        }\n    }\n    return (\n        <Fragment>\n            <div id=\"contactUs\">\n                <SectionHeader title=\"Contact\" />\n                <div className=\"contact--inner row d--container\">\n                        {/* <Map /> */}\n                        <h2>Get in Touch</h2>\n                    <form className=\"contact--form col-lg-8 col-md-8 row col-sm-12\" onSubmit={(e) => onFormSubmission(e)}>\n                       <textarea className=\"col-12 w-100\" required value={formInputs.message} onChange={(e) => onInputChange(e)} cols=\"30\" rows=\"9\" placeholder=\"Enter Message\" name=\"message\"></textarea>\n                        {\n                            isFormSubmitted && !formInputs.message\n                            && <div className=\"text-danger\">Message is required</div>\n                        }\n                       <div className=\"contact--name--email flex-row\">\n                            <input type=\"text\" required placeholder=\"Enter Name\" value={formInputs.name} onChange={(e) => onInputChange(e)} name=\"name\" />\n                            {\n                                isFormSubmitted && !formInputs.name\n                                && <div className=\"text-danger\">Your name is required</div>\n                            }\n                            <input type=\"email\" required placeholder=\"Enter Email\" value={formInputs.email} onChange={(e) => onInputChange(e)} name=\"email\" />\n                            {\n                                isFormSubmitted && !formInputs.email\n                                && <div className=\"text-danger\">Your email is required</div>\n                            }\n                       </div>\n                       <input className=\"col-12 w-100\" type=\"text\" required placeholder=\"Enter Subject\" value={formInputs.subject} onChange={(e) => onInputChange(e)} name=\"subject\" />\n                       {\n                            isFormSubmitted && !formInputs.subject\n                            && <div className=\"text-danger\">Subject is required</div>\n                        }\n                       <input className=\"col-lg-2 col-md-3 col-sm-12\" required type=\"submit\" value=\"Send\" />\n                    </form>\n                   \n                    <div className=\"contact--info flex-column col-lg-3 col-md-3 col-sm-12\">\n                       <div className=\"contact--info--item flex-row\">\n                             <VscHome />  \n                            <div className=\"flex-column\">\n                                <h3 className=\"contact--info--title\">Alexandria, Egypt.</h3>\n                                <p className=\"contact--info--details\">San Stefano, BD 91770</p>\n                            </div>\n                       </div>\n                       <div className=\"contact--info--item flex-row\">\n                             <BsTablet />  \n                            <div className=\"flex-column\">\n                                <h3 className=\"contact--info--title\">+20 253 565 2365</h3>\n                                <p className=\"contact--info--details\">Mon to Fri 9am to 6pm</p>\n                            </div>\n                       </div>\n                       <div className=\"contact--info--item flex-row\">\n                             <BsEnvelope />  \n                            <div className=\"flex-column\">\n                                <h3 className=\"contact--info--title\">support@colorlib.com</h3>\n                                <p className=\"contact--info--details\">Send us your query anytime!</p>\n                            </div>\n                       </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        changeCurrentPage: (title) => dispatch({type: \"changePageTitle\", title})\n    }\n}\nexport default connect(null,mapDispatchToProps)(Contact); ","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport \"./SectionHeader.scss\";\nimport { connect } from \"react-redux\";\n\nconst SectionHeader = (props) => {\n    const sectionTitle = props.title || props.currentPageTitle || \"page\";\n  return (\n    <Fragment>\n      <section id=\"sectionHeader\" className=\"flex-column\">\n        <h2>{sectionTitle}</h2>\n        <nav>\n            <ul className=\"section--header--links flex-row\">\n            <Link to=\"/\">Home</Link>\n            <Link to=\"#\" className=\"current--section--link\">{sectionTitle}</Link>\n            </ul>\n        </nav>\n\n      </section>\n    </Fragment>\n  );\n};\nSectionHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n    currentPageTitle: PropTypes.string\n}\nconst mapStateToProps = state => {\n    return {\n        currentPageTitle: state.main.currentPage\n    }\n}\nexport default connect(mapStateToProps)(SectionHeader);\n"],"sourceRoot":""}