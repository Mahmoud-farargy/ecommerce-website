{"version":3,"sources":["routes/Views/Cart/CartItem/CartItem.js","routes/Views/Cart/Cart.js","components/SectionHeader/SectionHeader.js"],"names":["connect","dispatch","editTotal","payload","type","delItem","item","id","className","onClick","title","price","toLocaleString","onChange","e","quantity","Number","target","value","calcTotal","total","onQuantityChange","min","defaultValue","max","state","cartList","products","cart","totalCart","totalItemsCount","countries","main","staticData","USStates","usStates","changeCurrentPage","useEffect","tableHeads","SectionHeader","length","map","tHead","index","scope","idx","style","float","htmlFor","name","defaultChecked","disabled","country","USState","placeholder","to","currentPageTitle","currentPage","props","sectionTitle"],"mappings":"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","file":"static/js/8.f6fe66dd.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { IoMdRemoveCircle } from \"react-icons/io\";\n\nconst CartItem = ({ item, editTotal, delItem }) => {\n  const onQuantityChange = (e) => {\n    const quantity =  Number(e.target.value);\n    if(quantity >= 1 && quantity <= 10){\n        \n        const calcTotal = +item.price * +quantity;\n        editTotal({id: item.id, total: calcTotal, quantity});\n    }\n\n  }\n\n  return (\n    <Fragment>\n      <tr id=\"cartItem\">\n        <td className=\"card--item--title flex-row\">\n          <span onClick={() => delItem({id: item.id})} className=\"remove--item\"><IoMdRemoveCircle /></span>\n          <p>{item.title}</p>\n          </td>\n        <td className=\"card--item--price\"><h5>${item.price?.toLocaleString()}</h5></td>\n        <td className=\"card--item--input\">\n          <input type=\"number\" onChange={(e) => onQuantityChange(e)} min={1} defaultValue={item.quantity} max={10}/>\n        </td>\n        <td className=\"card--item--total\"><h5>${item.total?.toLocaleString()}</h5></td>\n      </tr>\n    </Fragment>\n  );\n};\nCartItem.propTypes = {\n  item: PropTypes.object.isRequired,\n  editTotal: PropTypes.func.isRequired,\n  delItem: PropTypes.func.isRequired\n};\n\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    editTotal: (payload) => dispatch({type: \"editTotal\", payload}),\n    delItem: (payload) => dispatch({type: \"deleteCart\", payload})\n  }\n}\n\nexport default connect( null, mapDispatchToProps )(CartItem);\n","import React, { Fragment, useEffect } from \"react\";\nimport SectionHeader from \"../../../components/SectionHeader/SectionHeader\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport CartItem from \"./CartItem/CartItem\";\nimport { Link } from \"react-router-dom\";\nimport \"./Cart.scss\";\n\nconst Cart = ({changeCurrentPage, cartList, totalCart, totalItemsCount, countries, USStates}) => {\n    useEffect(() => {\n        changeCurrentPage(\"Cart\");\n    },[changeCurrentPage]);\n    const tableHeads = [\n        \"product\",\n        \"price\",\n        \"quantity\",\n        \"total\"\n    ];\n    return (\n        <Fragment>\n            <div id=\"cart\">\n                <div className=\"cart--inner\">\n                   <SectionHeader title=\"Cart\" />\n                   <div className=\"cart--items d--container\">\n                       {\n                        cartList && cartList?.length > 0 ?\n                        <div className=\"w-100 flex-column\">\n                            <table>\n                                <thead>\n                                    <tr>\n                                        {\n                                            tableHeads?.length > 0 && tableHeads.map((tHead, index) => {\n                                                return(\n                                                    <th key={index} scope=\"col\">\n                                                        {tHead}\n                                                    </th>\n                                                )\n                                            })\n                                        }    \n                                    </tr>\n\n                                </thead>\n                                <tbody>\n                                    {\n                                        cartList && cartList.length > 0 && cartList.map((item, idx) => <CartItem key={item.id || idx} item={item} />)\n                                    }\n                                </tbody>\n                            </table>\n                            <div className=\"shopping--area flex-row\">\n                                    <div className=\"shopping--area--inner\">\n                                            <h4 className=\"prominent--font\">Subtotal: <span style={{float: \"right\"}}>({totalItemsCount || cartList.length} {totalItemsCount > 1 || cartList.length > 1 ? \"items\" : \"item\"}) ${totalCart.toLocaleString()}</span></h4>\n                                            <h4 className=\"prominent--font\">Shopping: </h4>\n                                            <div className=\"shopping--options\">\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"flatRate5\">Flat Rate: $5.00</label>\n                                                    <input type=\"radio\" id=\"flatRate5\" name=\"shoppingOption\"/>\n                                                </div>\n                                               \n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"freeShopping\">Free Shopping</label>\n                                                    <input defaultChecked type=\"radio\" id=\"freeShopping\" name=\"shoppingOption\"/>\n                                                </div>\n\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"flatRate10\">Flat Rate: $10.00</label>\n                                                    <input type=\"radio\" id=\"flatRate10\" name=\"shoppingOption\"/>\n                                                </div>\n\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"localDelivery\">Local delivery</label>\n                                                    <input type=\"radio\" id=\"localDelivery\" name=\"shoppingOption\"/>\n                                                </div>\n                                                \n                                                <div className=\"form-group\">\n                                                    <select name=\"countries\" className=\"shopping--country\">\n                                                        <option disabled defaultChecked>Select</option>\n                                                        {\n                                                            countries && countries.length > 0 &&\n                                                            countries.map((country, index) => {\n                                                               return(<option key={index}>{country}</option>)\n                                                            })\n                                                        }\n                                                    </select>\n                                                </div>\n\n                                                <div className=\"form-group\">\n                                                    <select className=\"shopping--country\">\n                                                        <option disabled defaultChecked>select</option>\n                                                        {\n                                                            USStates && USStates.length > 0 && \n                                                            USStates.map((USState, index) => {\n                                                            return (<option key={index}>{USState}</option>)\n                                                            })\n                                                        }\n                                                    </select>\n                                                </div>\n\n                                                <div className=\"form-group\">\n                                                    <input type=\"text\" placeholder=\"Postcode/Zipcode\" />\n                                                </div>\n                                            </div>\n                                    </div>\n\n                            </div>\n                            <div className=\"shopping--buttons flex-row\">\n                                            <button className=\"primary--btn\"><Link to=\"/\">Continue Shopping</Link></button>\n                                            <button className=\"primary--btn\"><Link to=\"\">Proceed to checkout</Link></button>\n                            </div>\n                        </div>\n\n                        :\n                        <div className=\"empty--content\">\n                            No elements have been added to the cart yet.\n                        </div>\n                       }\n                   </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\nCart.propTypes = {\n    changeCurrentPage: PropTypes.func.isRequired,\n    cartList: PropTypes.array.isRequired,\n    totalCart: PropTypes.number.isRequired,\n    totalItemsCount: PropTypes.number.isRequired\n}\nconst mapStateToProps = state => {\n    return {\n        cartList: state.products.cart,\n        totalCart: state.products.totalCart,\n        totalItemsCount: state.products.totalItemsCount,\n        countries: state.main.staticData.countries,\n        USStates: state.main.staticData.usStates\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changeCurrentPage: (title) => dispatch({type: \"changePageTitle\", title})\n    }\n}\n\nexport default connect( mapStateToProps, mapDispatchToProps )(Cart);","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport \"./SectionHeader.scss\";\nimport { connect } from \"react-redux\";\n\nconst SectionHeader = (props) => {\n    const sectionTitle = props.title || props.currentPageTitle || \"page\";\n  return (\n    <Fragment>\n      <section id=\"sectionHeader\" className=\"flex-column\">\n        <h2>{sectionTitle}</h2>\n        <nav>\n            <ul className=\"section--header--links flex-row\">\n            <Link to=\"/\">Home</Link>\n            <Link to=\"#\" className=\"current--section--link\">{sectionTitle}</Link>\n            </ul>\n        </nav>\n\n      </section>\n    </Fragment>\n  );\n};\nSectionHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n    currentPageTitle: PropTypes.string\n}\nconst mapStateToProps = state => {\n    return {\n        currentPageTitle: state.main.currentPage\n    }\n}\nexport default connect(mapStateToProps)(SectionHeader);\n"],"sourceRoot":""}